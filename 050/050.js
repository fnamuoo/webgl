// mode:javascript

// 迷路

import * as Maze4 from "Maze4";
import * as Maze4data from "Maze4data";

// ブラウザのコンソール(Ctrl-Shift-I) で迷路をテキスト表示
//
window.onload = () => {

  // !!!!
  if (1) {
      if (1) {
          let mzdata = new Maze4.MazeData04();
          mzdata.create_from(Maze4data.get_map_data("sdata00"));
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// 垂直抗 4-5-7

// iy=0
// ########
// ########
// ########
// ########
// ########
// ########
// ########

// iy=1
// ########
// ##      
// ##      
// ##    ..
// ##    ..
// ##    SS
// ########

// iy=2
// ########
// ########
// ########
// ######..
// ########
// ########
// ########

// iy=3
// ########
// ##    GG
// ##    ..
// ##    ..
// ##      
// ##      
// ########

// iy=4
// ########
// ########
// ########
// ########
// ########
// ########
// ########

      }

      if (1) {
          let nx = 7,ny = 5,nz = 7;
          let mzdata = new Maze4.MazeData04(nx, ny, nz);
          mzdata.create(20); // 穴掘り法 （垂直抗）
          // mzdata.create(21); // 穴掘り法 （垂直抗）複数経路
          mzdata.resetStartGoal();
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// iy=0
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

// iy=1
// ##############
// ##..##      ##
// ##..##  ######
// ##SS##......##
// ######..######
// ##......##[_##
// ##############

// iy=2
// ##############
// ##..##########
// ##############
// ##########..##
// ##############
// ##..######[-##
// ##############

// iy=3
// ##############
// ##..##......##
// ##..##..##..##
// ##......##..##
// ##############
// ##........GG##
// ##############

// iy=4
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

      }

      if (1) {
          let mzdata = new Maze4.MazeData04();
          mzdata.create_from(Maze4data.get_map_data("sdata10"));
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// iy=0
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

// iy=1
// ##############
// ##            
// ##    ##    ##
// ##  ##      N0
// ##            
// ##            
// ##  ##W0....SS

// iy=2
// ##############
// ##############
// ##############
// ############N1
// ############  
// ##############
// ######W1..####

// iy=3
// ##############
// ##GG          
// ##..          
// ##..          
// ##..          
// ##..        ##
// ##........####

// iy=4
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

      }

      if (1) {
          let nx = 7,ny = 5,nz = 7;
          let mzdata = new Maze4.MazeData04(nx, ny, nz);
          mzdata.create(30); // 穴掘り法 （斜抗）
          mzdata.resetStartGoal();
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// iy=0
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

// iy=1
// ##############
// ##SS##  ######
// ##..##  ##N0##
// ##..##    [_##
// ##..######  ##
// ##..E0####  ##
// ##############

// iy=2
// ##############
// ##############
// ##########N1##
// ##########[`##
// ##############
// ##....########
// ##############

// iy=3
// ##############
// ##          ##
// ##  ######  ##
// ##      ######
// ######  ######
// ####......GG##
// ##############

// iy=4
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

      }

      if (1) {
          let mzdata = new Maze4.MazeData04();
          mzdata.create_from(Maze4data.get_map_data("sdata20"));
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// iy=0
// ########
// ########
// ########
// ########
// ########
// ########
// ########

// iy=1
// ##      
// ##      
// ##    ##
// ##  ##N1
// ##  ##N0
// ##    ..
// ##    SS

// iy=2
// ########
// ########
// ######N3
// ######N2
// ######..
// ######..
// ########

// iy=3
// ##    GG
// ##    ..
// ##  ##..
// ##  ##..
// ##  ##..
// ##    ##
// ##      

// iy=4
// ########
// ########
// ########
// ########
// ########
// ########
// ########

      }


      if (1) {
          let nx = 7,ny = 5,nz = 7;
          let mzdata = new Maze4.MazeData04(nx, ny, nz);
          mzdata.create(40); // 穴掘り法 （斜抗：緩）
          mzdata.resetStartGoal();
          mzdata.seekPath2(); // 最短経路をもとめる
          mzdata.dbgPrintMap();

// iy=0
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

// iy=1
// ##############
// ##..E0E1  ####
// ##..##########
// ##......##  ##
// ######..##  ##
// ##    ....GG##
// ##############

// iy=2
// ##############
// ##......E3####
// ##############
// ##############
// ##############
// ##############
// ##############

// iy=3
// ##############
// ####[`......##
// ##########..##
// ##SS....##..##
// ######..##..##
// ##    ......##
// ##############

// iy=4
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############
// ##############

      }

  }


}

